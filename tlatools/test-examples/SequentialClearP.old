------------------------ MODULE SequentialClearP -------------------------
EXTENDS TLC, Integers, Sequences

(* PlusCal options (-distpcal) *)

(*
--algorithm seq_algo

channel chan;

begin
	Clear:
		clear(chan);
	Add:
		send(chan, 2);
	ClearAgain:
		clear(chan);


end algorithm;
*)
\* BEGIN TRANSLATION - the hash of the PCal code: PCal-28e19aaef57434dace315b6cd8309498
VARIABLES chan, pc

vars == << chan, pc >>

Init == (* Global variables *)
        /\ chan = {}
        /\ pc = "Clear"

Clear == /\ pc = "Clear"
         /\ chan' = ( |-> {}])
         /\ pc' = "Add"

Add == /\ pc = "Add"
       /\ chan' = (chan \cup {2})
       /\ pc' = "ClearAgain"

ClearAgain == /\ pc = "ClearAgain"
              /\ chan' = ( |-> {}])
              /\ pc' = "Done"

(* Allow infinite stuttering to prevent deadlock on termination. *)
Terminating == pc = "Done" /\ UNCHANGED vars

Next == Clear \/ Add \/ ClearAgain
           \/ Terminating

Spec == Init /\ [][Next]_vars

Termination == <>(pc = "Done")

\* END TRANSLATION - the hash of the generated TLA code (remove to silence divergence warnings): TLA-7fcc962e77f59dfd74cf50821861a1fd

===========================================
