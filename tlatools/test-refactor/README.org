
* OneProcessMultiThreadMC
- use macros
- and channel operations in the macros


* Clash 
- dummy algorithm to check how fresh variables are generated 
-- in SubProcSet
-- in Init (for channels)
-- for read/clear operations
- should change fifo-channel to get the behaviour for both cases
- if declare variable _n430 we get a parse error 
  (but no problem for _c159)
- parsed
- TLC OK (deadlock)
	
* ClashNoChannel
- same as Clash but no channels

* Clash2D
- originally for testing fresh variables
- uses bidimensional channels 
- has multiple threads


* VarAndChannelDecls1C
- testing channel/fifo declarations local to processes
- parsed
- bug (general) for the initialization -> unidimensional array generated
- funny translation for fifos if send/receive are not atomic 
  (without Snd2 and Rcv2); doesn't work for channels (because of cur
  receiver twice)

* Procedures
- 0p -> uniprocess
- 1p1s -> one process / one thread
- 1p2t -> one process / two threads
- both use the same procedure
- Rec -> recursive procedure, no channels

* ProceduresWithLV
- procedures using process local variables
- parses but error in TLC (with or without distpcal)
- ProceduresWithLVprocId: use local variables from unique process
- ProceduresWithLVprocSet: use local variables from process set

* FreshVars
- check how fresh variables are generated
- try to declare a variable that will be freshly generated (eg _n42)


